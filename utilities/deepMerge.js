// Generated by CoffeeScript 2.5.1
export var deepMerge = function(...args) {
  var deep, extended, i, merge, obj;
  extended = {};
  deep = false;
  i = 0;
  if (typeof args[i] === "boolean") {
    deep = args[i];
    i++;
  }
  merge = function(obj) {
    var prop, results;
    results = [];
    for (prop in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, prop)) {
        if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {
          results.push(extended[prop] = deepMerge(true, extended[prop], obj[prop]));
        } else if (deep && Array.isArray(obj[prop])) {
          if (extended[prop] === void 0) {
            results.push(extended[prop] = obj[prop]);
          } else {
            results.push(Array.prototype.splice.apply(extended[prop], [0, obj[prop].length].concat(obj[prop])));
          }
        } else {
          results.push(extended[prop] = obj[prop]);
        }
      } else {
        results.push(void 0);
      }
    }
    return results;
  };
  while (i < args.length) {
    obj = args[i];
    merge(obj);
    i++;
  }
  return extended;
};
